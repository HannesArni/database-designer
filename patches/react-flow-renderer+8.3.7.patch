diff --git a/node_modules/react-flow-renderer/dist/ReactFlow.esm.js b/node_modules/react-flow-renderer/dist/ReactFlow.esm.js
index 37b2a27..2c977d3 100644
--- a/node_modules/react-flow-renderer/dist/ReactFlow.esm.js
+++ b/node_modules/react-flow-renderer/dist/ReactFlow.esm.js
@@ -8573,8 +8573,45 @@ var Edge = function (_a) {
     var targetNodeHandles = connectionMode === ConnectionMode.Strict
         ? targetNodeBounds.target
         : targetNodeBounds.target || targetNodeBounds.source;
-    var sourceHandle = getHandle(sourceNode.__rf.handleBounds.source, sourceHandleId);
-    var targetHandle = getHandle(targetNodeHandles, targetHandleId);
+
+    // begin custom stuff (HannesArni)
+
+    const sourceNodeX = sourceNode.__rf.position.x;
+    const targetNodeX = targetNode.__rf.position.x;
+    var sourceHandleSide, targetHandleSide;
+    if(targetNodeX > sourceNodeX){
+      const displacement = targetNodeX - sourceNodeX - sourceNode.__rf.width
+      // Target is right of source
+      if(displacement - 50 < 0){
+        // Right : Right
+        sourceHandleSide = 'r';
+        targetHandleSide = 'r';
+      }
+      else{
+        // Right : Left
+        sourceHandleSide = 'r';
+        targetHandleSide = 'l';
+      }
+    }
+    else{
+      const displacement = sourceNodeX - targetNodeX - targetNode.__rf.width;
+      // Target is left of source
+      if(displacement - 50 < 0 ){
+        // Left : Left
+        sourceHandleSide = 'l';
+        targetHandleSide = 'l';
+      }
+      else{
+        // Left : Right
+        sourceHandleSide = 'l';
+        targetHandleSide = 'r';
+      }
+    }
+    var sourceHandle = getHandle(sourceNode.__rf.handleBounds.source, `o${sourceHandleId}${sourceHandleSide}`);
+    var targetHandle = getHandle(targetNode.__rf.handleBounds.target, `i${targetHandleId}${targetHandleSide}`);
+
+    // end custom stuff (HannesArni)
+
     var sourcePosition = sourceHandle ? sourceHandle.position : Position.Bottom;
     var targetPosition = targetHandle ? targetHandle.position : Position.Top;
     if (!sourceHandle) {
diff --git a/node_modules/react-flow-renderer/dist/ReactFlow.js b/node_modules/react-flow-renderer/dist/ReactFlow.js
index 5ad8e54..581a9d6 100644
--- a/node_modules/react-flow-renderer/dist/ReactFlow.js
+++ b/node_modules/react-flow-renderer/dist/ReactFlow.js
@@ -8576,8 +8576,45 @@ var Edge = function (_a) {
     var targetNodeHandles = connectionMode === exports.ConnectionMode.Strict
         ? targetNodeBounds.target
         : targetNodeBounds.target || targetNodeBounds.source;
-    var sourceHandle = getHandle(sourceNode.__rf.handleBounds.source, sourceHandleId);
-    var targetHandle = getHandle(targetNodeHandles, targetHandleId);
+
+    // begin custom stuff (HannesArni)
+
+    const sourceNodeX = sourceNode.__rf.position.x;
+    const targetNodeX = targetNode.__rf.position.x;
+    var sourceHandleSide, targetHandleSide;
+    if(targetNodeX > sourceNodeX){
+      const displacement = targetNodeX - sourceNodeX - sourceNode.__rf.width
+      // Target is right of source
+      if(displacement - 50 < 0){
+        // Right : Right
+        sourceHandleSide = 'r';
+        targetHandleSide = 'r';
+      }
+      else{
+        // Right : Left
+        sourceHandleSide = 'r';
+        targetHandleSide = 'l';
+      }
+    }
+    else{
+      const displacement = sourceNodeX - targetNodeX - targetNode.__rf.width;
+      // Target is left of source
+      if(displacement - 50 < 0 ){
+        // Left : Left
+        sourceHandleSide = 'l';
+        targetHandleSide = 'l';
+      }
+      else{
+        // Left : Right
+        sourceHandleSide = 'l';
+        targetHandleSide = 'r';
+      }
+    }
+    var sourceHandle = getHandle(sourceNode.__rf.handleBounds.source, `o${sourceHandleId}${sourceHandleSide}`);
+    var targetHandle = getHandle(targetNode.__rf.handleBounds.target, `i${targetHandleId}${targetHandleSide}`);
+
+    // end custom stuff (HannesArni)
+
     var sourcePosition = sourceHandle ? sourceHandle.position : exports.Position.Bottom;
     var targetPosition = targetHandle ? targetHandle.position : exports.Position.Top;
     if (!sourceHandle) {
